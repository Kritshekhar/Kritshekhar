name: Update README with Most Used Languages

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour
  workflow_dispatch:  # Allows manual trigger

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch Most Used Languages
        env:
          GITHUB_TOKEN: ${{ secrets.STARS_TOKEN }}
          USERNAME: ${{ github.repository_owner }}
          ORGANIZATIONS: "visa-lab,CSE546-Cloud-Computing,CSE330-Operating-Systems"

        run: |
          echo "Fetching repositories for $USERNAME and organizations: $ORGANIZATIONS"

          # Fetch personal repositories (including private)
          USER_REPOS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/users/$USERNAME/repos?per_page=100&type=all" | jq -c 'if type=="array" then . else [] end')

          # Fetch organization repositories
          ORG_REPOS="[]"
          for ORG in $(echo $ORGANIZATIONS | tr "," "\n"); do
            REPOS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/orgs/$ORG/repos?per_page=100&type=all" | jq -c 'if type=="array" then . else [] end')

            ORG_REPOS=$(echo $ORG_REPOS $REPOS | jq -s 'add')
          done

          # Combine repositories
          ALL_REPOS=$(echo $USER_REPOS $ORG_REPOS | jq -s 'add')

          # Fetch and count programming languages
          declare -A LANG_COUNTS
          TOTAL_BYTES=0

          for REPO in $(echo $ALL_REPOS | jq -r '.[].full_name'); do
            LANGS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/languages")

            for LANG in $(echo $LANGS | jq -r 'keys[]'); do
              COUNT=$(echo $LANGS | jq -r --arg LANG "$LANG" '.[$LANG]')
              LANG_COUNTS[$LANG]=$(( ${LANG_COUNTS[$LANG]:-0} + COUNT ))
              TOTAL_BYTES=$(( TOTAL_BYTES + COUNT ))
            done
          done

          # Generate percentage-based ranking
          TOP_LANGS=$(for LANG in "${!LANG_COUNTS[@]}"; do
            PERCENTAGE=$(echo "scale=2; (${LANG_COUNTS[$LANG]} / $TOTAL_BYTES) * 100" | bc)
            echo "$PERCENTAGE $LANG"
          done | sort -rn | awk '{printf "- **%s**: %.2f%%\n", $2, $1}' | head -10)

          # Create a temporary file for updating README
          TEMP_FILE=$(mktemp)

          # Use awk to safely update README
          awk -v langs="$TOP_LANGS" '
              BEGIN { print_mode=1 }
              /<!-- LANGUAGES START -->/ { print; print "ðŸš€ **Most Used Languages:**"; print langs; print_mode=0; next }
              /<!-- LANGUAGES END -->/ { print_mode=1 }
              print_mode' README.md > "$TEMP_FILE"

          # Move the updated file back
          mv "$TEMP_FILE" README.md

      - name: Commit and push changes
        env:
          PAT_TOKEN: ${{ secrets.STARS_TOKEN }}
          USERNAME: ${{ github.repository_owner }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git remote remove origin
          git remote add origin https://${USERNAME}:${PAT_TOKEN}@github.com/${{ github.repository }}.git
          git commit -am "Updated most used programming languages (percentage)" || echo "No changes to commit"
          git push origin main --force
