name: Update README with Total Stars

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour
  workflow_dispatch:  # Allows manual trigger

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Debug Git Remote URL
        run: git remote -v

      - name: Fetch Total Stars
        env:
          GITHUB_TOKEN: ${{ secrets.STARS_TOKEN }}
          USERNAME: ${{ github.repository_owner }}
          ORGANIZATIONS: "visa-lab,CSE546-Cloud-Computing,CSE330-Operating-Systems"

        run: |
          echo "Fetching repositories for $USERNAME and organizations: $ORGANIZATIONS"

          # Fetch personal repositories
          USER_REPOS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          "https://api.github.com/users/$USERNAME/repos?per_page=100" | jq -c 'if type=="array" then . else [] end')

          # Fetch organization repositories
          ORG_REPOS="[]"
          for ORG in $(echo $ORGANIZATIONS | tr "," "\n"); do
            REPOS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/orgs/$ORG/repos?per_page=100" | jq -c 'if type=="array" then . else [] end')

            ORG_REPOS=$(echo $ORG_REPOS $REPOS | jq -s 'add')
          done

          # Combine repositories
          ALL_REPOS=$(echo $USER_REPOS $ORG_REPOS | jq -s 'add')

          # Calculate total stars
          TOTAL_STARS=$(echo $ALL_REPOS | jq '[.[] | .stargazers_count] | add')

          # Format repository list correctly
          REPO_LIST=$(echo $ALL_REPOS | jq -r '.[] | 
            "- [" + .name + "](https://github.com/" + 
            (if .owner | has("login") then .owner.login else "'"$USERNAME"'" end) + "/" + .name + ") ‚≠ê " + (.stargazers_count | tostring)')

          # Create a temporary file
          TEMP_FILE=$(mktemp)

          # Use awk to update README safely
          awk -v stars="$TOTAL_STARS" -v repos="$REPO_LIST" '
              BEGIN { print_mode=1 }
              /<!-- STAR COUNT START -->/ { print; print "üåü **Total Stars: " stars "**\n\n**Repositories:**"; print repos; print_mode=0; next }
              /<!-- STAR COUNT END -->/ { print_mode=1 }
              print_mode' README.md > "$TEMP_FILE"

          # Move the temp file back to README.md
          mv "$TEMP_FILE" README.md

      - name: Set Up Git Credentials
        env:
          PAT_TOKEN: ${{ secrets.STARS_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
        run: |
          git config --global user.name "Kritshekhar"
          git config --global user.email "actions@github.com"
          git remote remove origin
          git remote add origin https://${GITHUB_USERNAME}:${PAT_TOKEN}@github.com/${{ github.repository }}.git
          git fetch --unshallow

      - name: Force Git to Use HTTPS
        run: git config --global url."https://github.com/".insteadOf "git@github.com:"

      - name: Commit and push changes
        env:
          PAT_TOKEN: ${{ secrets.STARS_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}
        run: |
          git add README.md
          git commit -m "Updated total stars and repositories" || echo "No changes to commit"
          git push origin main --force
